# Docker-specific configuration for MysterriaArchive
spring.application.name=MysterriaArchive

# Database Configuration - Uses Docker environment variables
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mariadb://${DB_HOST:mariadb}:${DB_PORT:3306}/${DB_NAME:archive}
spring.datasource.username=${DB_USER:archive_user}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.show-sql=${DB_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# Docker-specific database optimizations
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10

# Server Configuration
server.port=${SERVER_PORT:8080}
server.error.include-message=always

# Spring Configuration
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Logging Configuration - Structured for Docker
logging.level.org.springframework=${LOG_LEVEL:INFO}
logging.level.org.springframework.web.filter.CorsFilter=WARN
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%level] %logger{36} - %msg%n

# Swagger/OpenAPI
springdoc.swagger-ui.path=/swagger-ui.html

# JWT Configuration (must match Backend settings exactly!)
jwt.secret=${JWT_SECRET}
jwt.issuer=${JWT_ISSUER:mysterria-backend}

# Archive-specific permissions
archive.permissions.read=PERM_ARCHIVE:READ
archive.permissions.write=PERM_ARCHIVE:WRITE
archive.permissions.moderate=PERM_ARCHIVE:MODERATE
archive.permissions.admin=PERM_ARCHIVE:ADMIN